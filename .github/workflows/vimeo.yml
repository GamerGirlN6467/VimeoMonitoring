name: Scheduled Vimeo Monitor

# 1. Set the necessary permissions
permissions:
  contents: write  # Grants write access to the repository contents

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC. Adjust as needed.
  workflow_dispatch:       # Allows manual triggering of the workflow.

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures full history for committing

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'  # Specify desired Python version

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # If you don't have a requirements.txt, install directly:
        # pip install requests python-dotenv

      # 4. Create .env file from secrets
      - name: Create .env file
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          SEARCH_QUERIES: ${{ secrets.SEARCH_QUERIES }}
          MONITORED_USERS: ${{ secrets.MONITORED_USERS }}
          KNOWN_LINKS_FILE: ${{ secrets.KNOWN_LINKS_FILE }}
        run: |
          python -c "
          import os
          with open('.env', 'w') as f:
              f.write(f'ACCESS_TOKEN={os.getenv("ACCESS_TOKEN")}\n')
              f.write(f'DISCORD_WEBHOOK_URL={os.getenv("DISCORD_WEBHOOK_URL")}\n')
              f.write(f'SEARCH_QUERIES={os.getenv("SEARCH_QUERIES")}\n')
              f.write(f'MONITORED_USERS={os.getenv("MONITORED_USERS")}\n')
              f.write(f'KNOWN_LINKS_FILE={os.getenv("KNOWN_LINKS_FILE")}\n')
          "

      # 5. Run the Python script
      - name: Execute Python script
        run: python search.py
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          SEARCH_QUERIES: ${{ secrets.SEARCH_QUERIES }}
          MONITORED_USERS: ${{ secrets.MONITORED_USERS }}
          KNOWN_LINKS_FILE: ${{ secrets.KNOWN_LINKS_FILE }}

      # 6. Configure Git for committing
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit report
        run: |
          git commit -am "Update links"
          git push
